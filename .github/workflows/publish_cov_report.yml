name: Publish Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      # 1. Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # 3. Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore

      # 4. Build de la soluci√≥n
      - name: Build solution
        run: dotnet build --no-restore

      # 5. Instalar navegadores de Playwright
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # 6. Ejecutar tests con cobertura
      - name: Run tests with code coverage
        run: dotnet test --collect:"XPlat Code Coverage" --settings "TestRunParameters.RunConfiguration.ResultsDirectory=TestResults"

      # 7. Instalar ReportGenerator
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      # 8. Generar reporte HTML de cobertura
      - name: Generate HTML report
        run: |
          reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:Cobertura" -reporttypes:HTML

      # 9. Verificar que la carpeta Cobertura exista
      - name: List Coverage Folder
        run: ls -la Cobertura

      # 10. Configurar GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 11. Subir los artefactos (HTML de cobertura)
      - name: Upload Coverage Report
        uses: actions/upload-pages-artifact@v3
        with:
          path: Cobertura

      # 12. Deploy en GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v3
